{"componentChunkName":"component---node-modules-confluenza-gatsby-theme-confluenza-src-templates-markdown-template-js","path":"/services/idapp/","result":{"data":{"site":{"siteMetadata":{"title":"Identity Box","editBaseUrl":"https://github.com/identity-box/identity-box/blob/master"}},"config":{"nodes":[{"tag":"user","title":"Identity Box"},{"tag":"developer","title":"Developers"},{"tag":"beta","title":"Early Adopters"},{"tag":"component","title":"Components"},{"tag":"service","title":"Services"},{"tag":"utils","title":"Utils"}]},"doc":{"html":"","fileAbsolutePath":"/home/runner/work/identity-box/identity-box/workspaces/idapp/CONFLUENZA.md","frontmatter":{"title":"Identity App","content":{"childMarkdownRemark":{"html":"<h1 id=\"identity-app\" style=\"position:relative;\"><a href=\"#identity-app\" aria-label=\"identity app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Identity App</h1>\n<p>Identity App to work with Identity Box. It is built with <a href=\"https://expo.dev\">Expo</a>, current SDK is <code class=\"language-text\">SDK 46</code>.</p>\n<h2 id=\"app-configuration\" style=\"position:relative;\"><a href=\"#app-configuration\" aria-label=\"app configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>App configuration</h2>\n<p>The app does not currently require any configuration.</p>\n<blockquote>\n<p>In case one is needed in the future, it can be provided in one of the configuration files (<code class=\"language-text\">*.config.js</code>).</p>\n</blockquote>\n<p>All the constants from the config file will be added to <code class=\"language-text\">app.json</code>\nunder the <code class=\"language-text\">extra</code> key. The <code class=\"language-text\">app.json</code> is created by adding this\n<code class=\"language-text\">extra</code> key to the contents of the <code class=\"language-text\">config.json</code>.\nTherefore before running <code class=\"language-text\">yarn expo start</code> or any other expo command,\nplease make sure you select the correct configuration by\nrunning <code class=\"language-text\">expo-env --env=&lt;your-configuration></code>. This will properly\npopulate the <code class=\"language-text\">extra</code> entry of the <code class=\"language-text\">app.json</code> making it visible\nto the app via <code class=\"language-text\">Constants.manifest.extra</code>.\nFor more information check <a href=\"https://www.npmjs.com/package/expo-env\">expo-env</a>.</p>\n<h2 id=\"preparing-for-distribution\" style=\"position:relative;\"><a href=\"#preparing-for-distribution\" aria-label=\"preparing for distribution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Preparing for distribution</h2>\n<p>Below the steps to prepare the app for distribution.</p>\n<h3 id=\"update-buildversion-number-for-the-app\" style=\"position:relative;\"><a href=\"#update-buildversion-number-for-the-app\" aria-label=\"update buildversion number for the app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update build/version number for the app</h3>\n<p>In <code class=\"language-text\">config.json</code> we have two attributes related to versioning of the app: <code class=\"language-text\">version</code> and <code class=\"language-text\">ios.buildNumber</code>. Before publishing the app to TestFlight one of the two needs to be updated. Currently we keep <code class=\"language-text\">version</code> fixed to <code class=\"language-text\">1.0.0</code>, and for each new build we just increase the build number.</p>\n<blockquote>\n<p>Here we are concerned with the iOS build, but notice that there is also attribute <code class=\"language-text\">android.versionCode</code> which plays the same role as <code class=\"language-text\">ios.buildNumber</code>. When increasing <code class=\"language-text\">ios.buildNumber</code> we also increase <code class=\"language-text\">android.versionCode</code>.</p>\n</blockquote>\n<h3 id=\"apply-the-build-configuration\" style=\"position:relative;\"><a href=\"#apply-the-build-configuration\" aria-label=\"apply the build configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Apply the build configuration</h3>\n<p>Run <code class=\"language-text\">yarn env:prod</code> from the terminal.</p>\n<blockquote>\n<p>All commands need to be run from the <code class=\"language-text\">workspaces/idapp</code> folder.</p>\n</blockquote>\n<blockquote>\n<p>Remember to issue <code class=\"language-text\">yarn build</code> at the root of the repo to build all dependencies. In the future we will move the whole build to the CI, but for know this has to be locally on your machine. This is not really needed you build on EAS server, as we make sure that local packages are build automatically there (see <code class=\"language-text\">postinstall</code> script in the root <code class=\"language-text\">package.json</code>).</p>\n</blockquote>\n<h2 id=\"expo-eas\" style=\"position:relative;\"><a href=\"#expo-eas\" aria-label=\"expo eas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Expo EAS</h2>\n<p>With <code class=\"language-text\">SDK 45</code>, expo introduced <a href=\"https://expo.dev/eas\">Expo Application Services</a>. It is a serious improvement over previous <code class=\"language-text\">expo-cli</code>, which significantly improves developer experience when working with Expo.</p>\n<p>For a good overview, we recommend <a href=\"https://blog.expo.dev/development-builds-are-out-of-preview-7e5b1979f84b\">Development Builds Are Out of Preview</a>.</p>\n<p>In what follows we show how to work with Expo and Identity App using the newly introduced Expo tools.</p>\n<p>Expo comes with two CLI tools: <code class=\"language-text\">expo-cli</code> and <code class=\"language-text\">eas-cli</code>. <code class=\"language-text\">expo-cli</code> we already know, this is how we <em>used to</em> work with expo using <code class=\"language-text\">expo start --ios</code> and <code class=\"language-text\">expo build:ios</code>. The output was an <code class=\"language-text\">ipa</code> file we could submit to App Store using <a href=\"https://apps.apple.com/us/app/transporter/id1450874784?mt=12\">Apple Transporter</a>.</p>\n<blockquote>\n<p>We leave a summary of the legacy instructions below for the reference.</p>\n</blockquote>\n<blockquote>\n<p>Notice that <a href=\"https://blog.expo.dev/turtle-goes-out-to-sea-d334db2a6b60\">2022 is the final year the Classic Build service will be available</a>. It is time to switch to EAS.</p>\n</blockquote>\n<p>When developing Expo applications we use <a href=\"https://expo.dev/client\">Expo Go</a> - a free app to launch your app on an iOS or Android device. With EAS, we can still use Expo Go, but we can also something called <a href=\"https://docs.expo.dev/development/introduction/\">development builds</a>. In short, using development builds, we can create our own version of <a href=\"https://expo.dev/client\">Expo Go</a> app, specially crafted for our project and containing only relevant native modules. Having a development build installed on the device, you can then conveniently develop as when you used the Expo Go app before. Expo Go is just replaced by your own app.</p>\n<p>For more info:</p>\n<ul>\n<li><a href=\"https://docs.expo.dev/development/build/\">Creating Development Builds</a></li>\n<li><a href=\"https://docs.expo.dev/development/getting-started/\">Getting Started</a></li>\n</ul>\n<h2 id=\"how-to-create-a-development-build\" style=\"position:relative;\"><a href=\"#how-to-create-a-development-build\" aria-label=\"how to create a development build permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to create a development build</h2>\n<p><a href=\"https://docs.expo.dev/development/build/\">Expo documentation</a> is pretty exhaustive, so here just a summary and some observations.</p>\n<p>You can either create the development build on the EAS server (up the free tier, after which you will need to pay) or your own local xcode distribution. The command to build a development build app on the eas server is (here, we focus on ios):</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">eas build <span class=\"token parameter variable\">--profile</span> development <span class=\"token parameter variable\">--platform</span> ios</code></pre></div>\n<p>The same to build and install app on your local machine:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">APP_VARIANT</span><span class=\"token operator\">=</span>development <span class=\"token function\">yarn</span> expo run:ios <span class=\"token parameter variable\">-d</span></code></pre></div>\n<blockquote>\n<p>In both cases you may need to register your devices with your account first using <code class=\"language-text\">eas device:create</code>, see the documentation for the details.</p>\n</blockquote>\n<p>Now to develop the app that is already installed on your device, just do:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">yarn</span> expo start --dev-client <span class=\"token punctuation\">[</span>--clear<span class=\"token punctuation\">]</span></code></pre></div>\n<blockquote>\n<p>If you used the app before, and now your rendezvous server is available on a different url, make sure that you re-scan the QR-code published by the rendezvous server. This is especially important to do <strong>before</strong> you do a <em>factory reset</em> in the Identity App.</p>\n</blockquote>\n<h2 id=\"yarn-expo-and-eas\" style=\"position:relative;\"><a href=\"#yarn-expo-and-eas\" aria-label=\"yarn expo and eas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>yarn expo and eas</h2>\n<p>In above commands, you may have noticed that we invoke <code class=\"language-text\">expo</code> via <code class=\"language-text\">yarn</code> (<code class=\"language-text\">yarn expo</code>), but we call <code class=\"language-text\">eas</code> directly. This is well described in <a href=\"https://blog.expo.dev/expo-sdk-46-c2a1655f63f7\">Expo SDK 46 blog post</a> in Section <em>Expo CLI</em>. For a brief summary: we install eas globally, while we use local installation when calling <code class=\"language-text\">expo</code>. To explicitly invoke the legacy globally installed CLI: use <code class=\"language-text\">expo-cli</code> instead of <code class=\"language-text\">expo</code>. Global Expo CLI is still required for <code class=\"language-text\">expo upgrade</code> and <code class=\"language-text\">expo doctor</code>: these commands haven’t yet been migrated to standalone packages, they are up next. Invoke them with <code class=\"language-text\">expo-cli upgrade</code> and <code class=\"language-text\">expo-cli doctor</code>. See also <a href=\"https://docs.expo.dev/workflow/expo-cli/#expo-cli-migration\">Expo CLI Migration</a>.</p>\n<h2 id=\"internal-distribution\" style=\"position:relative;\"><a href=\"#internal-distribution\" aria-label=\"internal distribution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Internal Distribution</h2>\n<p>Before submitting to the App Store (also TestFlight), you may also build a production version of your app without development extensions - this way you can test the app locally before going through the App Store publishing cycle:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># on the server</span>\neas build <span class=\"token parameter variable\">--profile</span> preview <span class=\"token parameter variable\">--platform</span> ios\n\n<span class=\"token comment\"># locally</span>\n<span class=\"token assign-left variable\">APP_VARIANT</span><span class=\"token operator\">=</span>preview <span class=\"token function\">yarn</span> expo run:ios <span class=\"token parameter variable\">--configuration</span> Release <span class=\"token parameter variable\">-d</span></code></pre></div>\n<p>The production build to my best knowledge can only be done on the server:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">eas build <span class=\"token parameter variable\">--profile</span> production <span class=\"token parameter variable\">--platform</span> ios</code></pre></div>\n<h2 id=\"cache\" style=\"position:relative;\"><a href=\"#cache\" aria-label=\"cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache</h2>\n<p>Sometimes it is good to clear or invalidate the cache in the Eas build, especially when some hard to understand errors occur. There are two way to accomplish that. First, is to use <code class=\"language-text\">--clear-cache</code> option with <code class=\"language-text\">eas build</code>, e.g.:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">eas build <span class=\"token parameter variable\">--profile</span> development <span class=\"token parameter variable\">--platform</span> ios --clear-cache</code></pre></div>\n<p>There is also <a href=\"https://docs.expo.dev/build-reference/eas-json/#cache\">cache</a> setting in <code class=\"language-text\">eas.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"production\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"16.16.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"cache\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>To invalide cache, change the value of the <code class=\"language-text\">cache.key</code> attribute.</p>\n<h2 id=\"submitting-the-app\" style=\"position:relative;\"><a href=\"#submitting-the-app\" aria-label=\"submitting the app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Submitting the app</h2>\n<p>Finally, the app submission with <code class=\"language-text\">eas submit</code> seems to be working just fine. If in trouble though, you can still just download the production build from EAS server and submit the app using <a href=\"https://apps.apple.com/us/app/transporter/id1450874784?mt=12\">Apple Transporter</a>.</p>\n<p>To submit the production build using EAS url:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">eas submit <span class=\"token parameter variable\">--url</span> <span class=\"token operator\">&lt;</span>url<span class=\"token operator\">></span></code></pre></div>\n<p>To submit a previously downloaded production build:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">eas submit <span class=\"token parameter variable\">--platform</span> ios</code></pre></div>\n<h2 id=\"expo-and-monorepos\" style=\"position:relative;\"><a href=\"#expo-and-monorepos\" aria-label=\"expo and monorepos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Expo and monorepos</h2>\n<p>Monorepos can be a pain. This is what we recommend.</p>\n<p>Take a look at <a href=\"https://docs.expo.dev/guides/monorepos/\">Working with Monorepos</a>, but then you may like to follow our recommendations below.</p>\n<p>We used to use <a href=\"https://www.npmjs.com/package/expo-yarn-workspaces\">expo-yarn-workspaces</a>. It seems though that it does not add anything, except for making <code class=\"language-text\">expo-cli doctor</code> to fail with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">expo-cli doctor\nExpected package @expo/config-plugins@^5.0.0\nFound invalid:\n  @expo/config-plugins@4.1.5\n  @expo/config-plugins@4.1.5\n  <span class=\"token punctuation\">(</span>for <span class=\"token function\">more</span> info, run: <span class=\"token function\">npm</span> why @expo/config-plugins<span class=\"token punctuation\">)</span></code></pre></div>\n<p>The recommendations from the above mentioned <a href=\"https://docs.expo.dev/guides/monorepos/\">Working with Monorepos</a> are promising, but it did not work for us. We found that the only reliable way to get things working predictably was to stop hoisting dependencies from the <code class=\"language-text\">idapp</code> workspace by adding this to its <code class=\"language-text\">package.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"installConfig\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"hoistingLimits\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"workspaces\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Moreover, following the advice to create a custom <code class=\"language-text\">metro.config.js</code>, when running <code class=\"language-text\">yarn expo run:ios -d</code> we were getting a message:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Metro skipped: Project metro.config.js does not match prebuild template.\n› Ensure the project uses @expo/metro-config.</code></pre></div>\n<p>Adding <code class=\"language-text\">@expo/metro-config</code> does not seem to do anything (expo seems to provide it already via <code class=\"language-text\">expo/metro-config</code>). We decided to delete the custom <code class=\"language-text\">metro.config.js</code> and let the default to be created by <code class=\"language-text\">yarn expo run:ios -d</code> (we also ignored it from the linting). With these settings in place, the project seems to be building fine.</p>\n<h2 id=\"installing-app-variants-on-the-same-device\" style=\"position:relative;\"><a href=\"#installing-app-variants-on-the-same-device\" aria-label=\"installing app variants on the same device permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing app variants on the same device</h2>\n<p>We follow the advice from <a href=\"https://docs.expo.dev/build-reference/variants/\">Installing app variants on the same device</a>. In <code class=\"language-text\">app.config.js</code> we source the basic configuration from <code class=\"language-text\">app.json</code> and then we update it based on the EVN variable <code class=\"language-text\">APP_VARIANT</code>, which can either be set manually in the shell when building locally or in <code class=\"language-text\">eas.json</code> when using <code class=\"language-text\">eas build</code>. See also <a href=\"https://docs.expo.dev/workflow/configuration/\">Configuration with app.json/app.config.js</a>.</p>\n<p>To summarize, in order to build a development build version of the app locally, we use:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># for development build</span>\n<span class=\"token assign-left variable\">APP_VARIANT</span><span class=\"token operator\">=</span>development <span class=\"token function\">yarn</span> expo run:ios <span class=\"token parameter variable\">-d</span>\n\n<span class=\"token comment\"># for preview build</span>\n<span class=\"token assign-left variable\">APP_VARIANT</span><span class=\"token operator\">=</span>preview <span class=\"token function\">yarn</span> expo run:ios <span class=\"token parameter variable\">--configuration</span> Release <span class=\"token parameter variable\">-d</span></code></pre></div>\n<blockquote>\n<p>We still use <code class=\"language-text\">config.json</code> to change the app configuration and then we apply it to <code class=\"language-text\">app.json</code> by running <code class=\"language-text\">yarn env:prod</code>. Now this seems to be a bit redundant but may come handy again when we need to keep separate configs for production and development/testing. The <a href=\"\">expo-env</a> package seems a bit outdated, perhaps we should check <a href=\"https://docs.expo.dev/guides/environment-variables/\">Environment variables in Expo</a> and <a href=\"https://docs.expo.dev/build-reference/variables/\">Environment variables and secrets</a>.</p>\n</blockquote>\n<h2 id=\"troubleshooting\" style=\"position:relative;\"><a href=\"#troubleshooting\" aria-label=\"troubleshooting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Troubleshooting</h2>\n<p>In our overall experience we observed the following:</p>\n<ol>\n<li>When building on local computer using <code class=\"language-text\">yarn expo run:ios -d</code>: if the build fails, try the following:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> ~/Library/Developer/Xcode/DerivedData/*\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> **/node_modules\n<span class=\"token function\">yarn</span> <span class=\"token function\">install</span>\n<span class=\"token function\">yarn</span> build</code></pre></div>\n<ol start=\"2\">\n<li>We recommend installing <code class=\"language-text\">expo-cli</code> and <code class=\"language-text\">eas-cli</code> globally (e.g. <code class=\"language-text\">yarn global add expo-cli eas-cli</code>), even though <code class=\"language-text\">expo</code> is now available through local expo dependencies and can be called as <code class=\"language-text\">yarn expo</code>.</li>\n<li>When building on the server, pay attention to <code class=\"language-text\">.gitignore</code>. <code class=\"language-text\">eas  build</code> will only upload to eas server what is not ignored.</li>\n<li><code class=\"language-text\">eas build</code> operates on your repo in the same way you do locally. Before the expo app can be built, local dependencies need to be built. This is why we have <code class=\"language-text\">posinstall</code> scrip in the top-level <code class=\"language-text\">package.json</code>.</li>\n<li>Before using <code class=\"language-text\">eas build</code>, we recommend to delete the <code class=\"language-text\">ios</code> folder if it exists (it is the result of doing <code class=\"language-text\">yarn expo run:ios -d</code>).</li>\n</ol>\n<h2 id=\"legacy-instruction-for-the-reference\" style=\"position:relative;\"><a href=\"#legacy-instruction-for-the-reference\" aria-label=\"legacy instruction for the reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Legacy instruction for the reference</h2>\n<p>For the reference, we still keep the original build steps below.</p>\n<h3 id=\"usage\" style=\"position:relative;\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">yarn</span> start <span class=\"token punctuation\">[</span>--clear<span class=\"token punctuation\">]</span></code></pre></div>\n<blockquote>\n<p>If you used the app before, and now your rendezvous server is available on a different url, make sure that you re-scan the QR-code published by the rendezvous server. This is especially important to do <strong>before</strong> you do a <em>factory reset</em> in the Identity App.</p>\n</blockquote>\n<h3 id=\"update-buildversion-number-for-the-app-1\" style=\"position:relative;\"><a href=\"#update-buildversion-number-for-the-app-1\" aria-label=\"update buildversion number for the app 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update build/version number for the app</h3>\n<p>In <code class=\"language-text\">config.json</code> we have two attributes related to versioning of the app: <code class=\"language-text\">version</code> and <code class=\"language-text\">ios.buildNumber</code>. Before publishing the app to TestFlight one of the two needs to be updated. Currently we keep <code class=\"language-text\">version</code> fixed to <code class=\"language-text\">1.0.0</code>, and for each new build we just increase the build number.</p>\n<blockquote>\n<p>Here we are concerned with the iOS build, but notice that there is also attribute <code class=\"language-text\">android.versionCode</code> which plays the same role as <code class=\"language-text\">ios.buildNumber</code>. When increasing <code class=\"language-text\">ios.buildNumber</code> we also increase <code class=\"language-text\">android.versionCode</code>.</p>\n</blockquote>\n<h3 id=\"apply-the-build-configuration-1\" style=\"position:relative;\"><a href=\"#apply-the-build-configuration-1\" aria-label=\"apply the build configuration 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Apply the build configuration</h3>\n<p>Run <code class=\"language-text\">yarn env:prod</code> from the terminal.</p>\n<blockquote>\n<p>All commands need to be run from the <code class=\"language-text\">workspaces/idapp</code> folder.</p>\n</blockquote>\n<blockquote>\n<p>Remember to issue <code class=\"language-text\">yarn build</code> at the root of the repo to build all dependencies. In the future we will move the whole build to the CI, but for know this has to be locally on your machine. This is not really needed you build on EAS server, as we make sure that local packages are build automatically there (see <code class=\"language-text\">postinstall</code> script in the root <code class=\"language-text\">package.json</code>).</p>\n</blockquote>\n<h3 id=\"create-ios-build\" style=\"position:relative;\"><a href=\"#create-ios-build\" aria-label=\"create ios build permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create iOS build</h3>\n<p>Run <code class=\"language-text\">expo build:ios</code> from the terminal. Once the build is finished download the corresponding <code class=\"language-text\">.ipa</code> file.</p>\n<h3 id=\"upload-the-build-to-apple-connect\" style=\"position:relative;\"><a href=\"#upload-the-build-to-apple-connect\" aria-label=\"upload the build to apple connect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Upload the build to Apple Connect</h3>\n<p>Once the app is built, download the <code class=\"language-text\">ipa</code> file and use <a href=\"https://apps.apple.com/us/app/transporter/id1450874784?mt=12\">Apple Transporter</a> to upload the file to the Apple Connect account.</p>\n<h3 id=\"previous-not-recommended-method\" style=\"position:relative;\"><a href=\"#previous-not-recommended-method\" aria-label=\"previous not recommended method permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Previous (not recommended) method</h3>\n<p>In the past we had to use <code class=\"language-text\">xcrun</code> tool to upload the app to Apple Connect:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">xcrun altool --upload-app <span class=\"token parameter variable\">-f</span> <span class=\"token operator\">&lt;</span><span class=\"token environment constant\">PATH</span>-TO-IPA-FILE<span class=\"token operator\">></span> <span class=\"token parameter variable\">-u</span> <span class=\"token operator\">&lt;</span>YOUR APPLE-ID<span class=\"token operator\">></span></code></pre></div>\n<p>You will be asked for the password.</p>\n<blockquote>\n<p>Here I assume you have your Apple Connect configured. In particular you might have to generate an App Specific password for your account. If you need some guidance on the whole process you may like to consult <a href=\"https://levelup.gitconnected.com/react-native-how-to-publish-an-expo-app-to-testflight-debug-common-errors-90e427b4b5ea\">React Native: How To Publish An Expo App To TestFlight + Debug Common Errors</a> and the official Expo documentation <a href=\"https://docs.expo.io/versions/v35.0.0/distribution/uploading-apps/\">Uploading Apps to the Apple App Store and Google Play</a>.</p>\n</blockquote>\n<blockquote>\n<p>If you have 2FA enabled for your AppleId, you will need to create an App-specific password and provide it here.</p>\n</blockquote>\n<p>It may take some time before the uploading of the app finishes. There will be no feedback or progress indication in the meantime. If everything worked out, you will just see <code class=\"language-text\">No errors uploading 'YOUR IPA FILE NAME'</code>. In case it did not work, you will get some information about the error, in which case <a href=\"https://github.com/expo/expo-cli/issues/927\">this thread</a> may help.</p>\n<h3 id=\"make-your-build-ready-on-the-apple-connect-portal\" style=\"position:relative;\"><a href=\"#make-your-build-ready-on-the-apple-connect-portal\" aria-label=\"make your build ready on the apple connect portal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Make your build ready on the Apple Connect portal</h3>\n<p>You may need to wait a bit before the processing of your build finishes on iTunes. You will get an email from iTunes Store saying that your new build has completed processing (and you will most probably ignore an email about ITMS-90809: Deprecated API Usage for UIWebView - we hope this will be fixed by Expo team soon).</p>\n<p>You will also like to include additional information about your build so that your testers know what's new in this build that needs to be tested.</p>\n<blockquote>\n<p>We noticed that entering this description on Safari makes the portal unresponsive - Google Chrome worked just fine...</p>\n</blockquote>","fileAbsolutePath":"/home/runner/work/identity-box/identity-box/workspaces/idapp/README.md"}}}},"mdx":null},"pageContext":{"templatePath":"/services/idapp"}},"staticQueryHashes":["1639663795"],"slicesMap":{}}