{"componentChunkName":"component---node-modules-confluenza-gatsby-theme-confluenza-src-templates-markdown-template-js","path":"/developers/running-identity-box-locally/","result":{"data":{"site":{"siteMetadata":{"title":"Identity Box","editBaseUrl":"https://github.com/identity-box/identity-box/blob/master"}},"config":{"nodes":[{"tag":"user","title":"Identity Box"},{"tag":"developer","title":"Developers"},{"tag":"beta","title":"Early Adopters"},{"tag":"component","title":"Components"},{"tag":"service","title":"Services"},{"tag":"utils","title":"Utils"}]},"doc":{"html":"<p>If you are a contributor, you will certainly like to be able to run the whole\nIdentity Box ecosystem locally so that it is easier to test your changes.</p>\n<p>Our setup comprises of:</p>\n<ol>\n<li>A local IPFS node,</li>\n<li><a href=\"/services/identity-service\">Identity Service</a> for managing identities,</li>\n<li><a href=\"/services/nameservice\">Name Service</a> dedicated to publishing and resolving IPNS names,</li>\n<li><a href=\"/services/box-office\">Box Office</a> responsible for dispatching incoming requests to appropriate services,</li>\n<li><a href=\"/services/rendezvous\">Rendezvous Service</a> providing external connectivity and facilitating so called <em>tunnels</em> between mobile and the web.</li>\n<li>Hush-Hush frontend,</li>\n<li>Identity App running on an iPhone via Expo app.</li>\n</ol>\n<p>Here we take advantage of the scalable architecture and we run only one instance of IPFS and Identity Box. It means that one and the same Identity Box will serve both the users and the Hush-Hush service. In production, we may prefer to use separate Identity Box for each potential user and also at least one separate Identity Box for each service provider.</p>\n<h2 id=\"prerequisites\" style=\"position:relative;\"><a href=\"#prerequisites\" aria-label=\"prerequisites permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prerequisites</h2>\n<p>A computer (we work on a MAC), a local network with access to the Internet, and an iOS mobile device.</p>\n<p>Let's start with IPFS node on your computer.</p>\n<h2 id=\"ipfs-node\" style=\"position:relative;\"><a href=\"#ipfs-node\" aria-label=\"ipfs node permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPFS node</h2>\n<p>There are a few ways of installing IPFS. Follow the instructions <a href=\"https://docs.ipfs.tech/install/command-line/\">Install IPS (Command Line)</a> to install IPFS if you do not have any version installed yet. To update an existing installation you can check <a href=\"https://docs.ipfs.tech/install/ipfs-updater/\">IPFS Updater</a>. IPFS can also be installed directly using IPFS Updater. We used this approach successfully with the previous versions, and in this tutorial we install IPFS using this method. The instructions how to use IPFS Updater directly to install IPFS can be found at <a href=\"https://github.com/ipfs/ipfs-update\">ipfs/ipfs-update</a>. Here we need to apply some corrections, as the GO installer changed a bit in the meantime, and so slightly modified steps need to be followed.</p>\n<p>First, make sure you have go installed:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ brew <span class=\"token function\">install</span> go\n$ go version\ngo version go1.19.2 darwin/arm64</code></pre></div>\n<blockquote>\n<p>In this tutorial we use M2 laptop. If you have an intel-based machine, the output will be different but everything should work pretty much the same.</p>\n</blockquote>\n<p>Now create a folder (somewhere), eg:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> ~/go\n$ <span class=\"token builtin class-name\">cd</span> ~/go</code></pre></div>\n<p>and then run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span>on go <span class=\"token function\">install</span> github.com/ipfs/ipfs-update@latest</code></pre></div>\n<p>You need to add <code class=\"language-text\">$HOME/go/bin</code> to your <code class=\"language-text\">PATH</code>. Then (in a new terminal or after sourcing your shell config) run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ipfs-update <span class=\"token parameter variable\">--version</span>                                                                                                    <span class=\"token number\">130</span> â†µ\nipfs-update version v1.9.0</code></pre></div>\n<p>Finally, install IPFS:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ipfs-update <span class=\"token function\">install</span> v0.16.0\nfetching go-ipfs version v0.16.0\nError fetching: <span class=\"token function\">open</span> /Users/mczenko/.ipfs/api: no such <span class=\"token function\">file</span> or directory\nFetching with HTTP: <span class=\"token string\">\"https://ipfs.io/ipns/dist.ipfs.tech/go-ipfs/v0.16.0/go-ipfs_v0.16.0_darwin-arm64.tar.gz\"</span>\nbinary downloaded, verifying<span class=\"token punctuation\">..</span>.\nsuccess<span class=\"token operator\">!</span> tests all passed.\nstashing old binary\ninstalling new binary to /Users/mczenko/go/bin/ipfs\nchecking <span class=\"token keyword\">if</span> repo migration is needed<span class=\"token punctuation\">..</span>.\n\nInstallation complete<span class=\"token operator\">!</span>\n$ ipfs <span class=\"token parameter variable\">--version</span>\nipfs version <span class=\"token number\">0.16</span>.0</code></pre></div>\n<blockquote>\n<p>Seems like sometimes ipfs-update faces some problems to fetch the source package from the gateway. What may help sometimes is to try to download the source file via browser and then try again from command line. Otherwise, try using version <code class=\"language-text\">0.14.0</code> or <code class=\"language-text\">0.15.0</code>.</p>\n</blockquote>\n<p>IPFS uses a repository in the local file system. By default, the repo is located at <code class=\"language-text\">~/.ipfs</code>. To change the repo location, set the <code class=\"language-text\">$IPFS_PATH</code> environment variable. For the sake of completeness we set <code class=\"language-text\">$IPFS_PATH</code> to the default value and we also set two other variables which we will need for our Identity Box (local) backups:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">IPFS_PATH</span><span class=\"token operator\">=</span><span class=\"token environment constant\">$HOME</span>/.ipfs\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">IDBOX_BACKUP</span><span class=\"token operator\">=</span><span class=\"token environment constant\">$HOME</span>/idbox/backup\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">IDBOX_BACKUP_PASSWORD</span><span class=\"token operator\">=</span>password</code></pre></div>\n<p>Also, make sure that the path indicated by <code class=\"language-text\">$IDBOX_BACKUP</code> exists:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> idbox/backup</code></pre></div>\n<p>You can init and start IPFS node with the following commands:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ipfs init\ngenerating ED25519 keypair<span class=\"token punctuation\">..</span>.done\npeer identity: 12D3KooWPPRYkHgfCNrut8cVKsEFzP3VgzRuRUNKiAKsNhHNNo7T\ninitializing IPFS <span class=\"token function\">node</span> at /Users/mczenko/.ipfs\nto get started, enter:\n\n\tipfs <span class=\"token function\">cat</span> /ipfs/QmQPeNsJPyVWPFDVHb77w8G42Fvo15z4bG2X8D2GhfbSXc/readme\n$ ipfs daemon --enable-namesys-pubsub --enable-pubsub-experiment --enable-gc</code></pre></div>\n<h2 id=\"identity-box\" style=\"position:relative;\"><a href=\"#identity-box\" aria-label=\"identity box permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Identity Box</h2>\n<p>IPFS normally runs on the user's Identity Box, but because the architecture is quite flexible, we can easily separate IPFS and other services that run on the box. <a href=\"/services/identity-service\">Identity Service</a> and <a href=\"/services/nameservice\">Name Service</a> are two native services currently running on the Identity Box. To dispatch request to the right service, Identity Box uses <a href=\"/services/box-office\">Box Office</a> service. Finally, external connectivity is provided by the <a href=\"/services/rendezvous\">Rendezvous</a>, which also supports secure communication between user's mobile and a web app running in a browser.</p>\n<h3 id=\"backups\" style=\"position:relative;\"><a href=\"#backups\" aria-label=\"backups permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Backups</h3>\n<p>Identity Service provides functionality allowing creating identity backups and restoring from backups. For this to work, Identity Service assumes existence of two environment variables:</p>\n<ol>\n<li><code class=\"language-text\">IDBOX_BACKUP</code> holding the absolute path to the backup folder on your machine.</li>\n<li><code class=\"language-text\">IDBOX_BACKUP_PASSWORD</code> holding the backup password.</li>\n</ol>\n<p>Please add these environment variables to your shell configuration file.</p>\n<h3 id=\"ipns\" style=\"position:relative;\"><a href=\"#ipns\" aria-label=\"ipns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPNS</h3>\n<p>Currently, Identity Service depends in IPNS. IPNS still needs some work to be more suitable for production and so, in the mean time, we are experimenting.\nOur first approach was to use a centralized service to fake IPNS. In this first approach we used the enemy: Google's Firebase.\nIn the current implementation though, we are experimenting with using IPFS's native <em>pubsub</em> functionality. This still deserves a separate topic,\nand we will publish more about it. For now, it is enough to say that we do not use Firebase at the very moment. <strong>Yes, we are free from Google</strong>.</p>\n<blockquote>\n<p>For time being, we still keep the related documentation below in the <a href=\"#appendix---ipns-with-firebase\">appendix</a> though.</p>\n</blockquote>\n<h3 id=\"name-service\" style=\"position:relative;\"><a href=\"#name-service\" aria-label=\"name service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Name Service</h3>\n<p>In order to start a local instance of the Name Service, in a new terminal do:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> workspaces/nameservice\n$ source/index.js start</code></pre></div>\n<p>That's it. Use <code class=\"language-text\">--help</code> to see all available options.</p>\n<h3 id=\"identity-service\" style=\"position:relative;\"><a href=\"#identity-service\" aria-label=\"identity service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Identity Service</h3>\n<p>In a similar way we start Identity Service:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> workspaces/identity-service\n$ source/index.js start</code></pre></div>\n<h3 id=\"box-office\" style=\"position:relative;\"><a href=\"#box-office\" aria-label=\"box office permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Box Office</h3>\n<p>Then, to tie everything up, we start the Box Office service:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> workspaces/box-office\n$ source/index.js start</code></pre></div>\n<h3 id=\"rendezvous\" style=\"position:relative;\"><a href=\"#rendezvous\" aria-label=\"rendezvous permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rendezvous</h3>\n<p>Finally, to provide external connectivity, we start the Rendezvous service:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ source/index.js start <span class=\"token parameter variable\">-b</span> http://192.168.1.15:3100</code></pre></div>\n<p>With the <code class=\"language-text\">-b</code> or <code class=\"language-text\">--baseUrl</code> option we provide the rendezvous url, which we want to be used externally. Using this option, Rendezvous service will generate a QR code that has to be scanned when associating the box with the user's Identity App. Rendezvous service listens on port <code class=\"language-text\">3100</code> by default and if you want to use different port you can use <code class=\"language-text\">-p</code> option. Use <code class=\"language-text\">./index.js start --help</code> to learn more about available options.</p>\n<h2 id=\"hush-hush\" style=\"position:relative;\"><a href=\"#hush-hush\" aria-label=\"hush hush permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hush-Hush</h2>\n<p>In order to start the Hush Hush client, first, we need to provide a local <code class=\"language-text\">.env.local</code> configuration file:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> workspaces/hush-hush\n$ <span class=\"token function\">touch</span> .env.local</code></pre></div>\n<blockquote>\n<p>Do not commit <code class=\"language-text\">.env.local</code> to the repo. We already added it to the .gitignore in <code class=\"language-text\">workspaces/hush-hush/.gitignore</code>.</p>\n</blockquote>\n<p>In this file we need to set the <code class=\"language-text\">NEXT_PUBLIC_HUSH_HUSH_RENDEZVOUS_URL</code> to hold the same value we provided when starting the Rendezvous service using the <code class=\"language-text\">-b</code> option. In our example this would be then: <code class=\"language-text\">http://192.168.1.15:3100</code>. Thus, the content of the <code class=\"language-text\">.env.local</code> should be:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">NEXT_PUBLIC_HUSH_HUSH_RENDEZVOUS_URL</span><span class=\"token operator\">=</span>http://192.168.1.15:3100</code></pre></div>\n<p>Having this, we can start the Hush Hush service as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> workspaces/hush-hush\n$ <span class=\"token function\">yarn</span> dev</code></pre></div>\n<p>You can then access Hush Hush at <a href=\"http://localhost:3000\">http://localhost:3000</a>.</p>\n<h2 id=\"identity-app\" style=\"position:relative;\"><a href=\"#identity-app\" aria-label=\"identity app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Identity App</h2>\n<p>To start Identity App, from <code class=\"language-text\">workspaces/idapp</code> run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">yarn</span> start <span class=\"token parameter variable\">--clear</span></code></pre></div>\n<p>This will open a page in a browser, where you can find a QR Code (it should also show up in the terminal).\nMake sure that you have the <em>Expo</em> app installed on your mobile, and then scan the QR Code directly from the Expo app or with the camera on your mobile - it should present you with an option to open the Expo app.</p>\n<p>The Identity App app should start and now you can follow the steps from <a href=\"/experience-identity-box\">Experience Identity Box</a> to test that your setup is working correctly.</p>\n<h2 id=\"appendix---ipns-with-firebase\" style=\"position:relative;\"><a href=\"#appendix---ipns-with-firebase\" aria-label=\"appendix   ipns with firebase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Appendix - IPNS with Firebase</h2>\n<p>First, you need to create a Firebase account. Once you have it and you are logged in, create a new project and name it anyway you like. Then create a <em>Cloud Firestore</em> (as opposite to the legacy <em>Realtime Database</em>) and thene create a collection named <em>ipns</em>. In the rules tab you can place something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n    }\n  }\n}</code></pre></div>\n<p>This will basically prevent any public read/write access to the database and we will use <em>Admin SDK</em> to access the <em>ipns</em> collection.</p>\n<p>In the Firebase project settings, in the <em>Service accounts</em> tab select <em>Generate new private key</em>, then confirm by clicking <em>Generate Key</em>. Securely store the JSON file containing the key.</p>\n<p>Now, add <code class=\"language-text\">GOOGLE_APPLICATION_CREDENTIALS</code> environment variable to your shell configuration file setting its value to the path to the generated JSON file:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">GOOGLE_APPLICATION_CREDENTIALS</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>absolute_path<span class=\"token operator\">></span></code></pre></div>\n<p>Your Firebase setup should now be ready for use. For more details please consult <a href=\"https://firebase.google.com/docs/admin/setup\">Add the Firebase Admin SDK to Your Server</a>.</p>","fileAbsolutePath":"/home/runner/work/identity-box/identity-box/workspaces/homepage/src/pages/developers/RunningIdentityBoxLocally.md","frontmatter":{"title":"Running Identity Box Locally","content":null}},"mdx":null},"pageContext":{"templatePath":"/developers/running-identity-box-locally"}},"staticQueryHashes":["1639663795"],"slicesMap":{}}