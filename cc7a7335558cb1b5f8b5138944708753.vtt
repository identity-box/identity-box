WEBVTT

00:03.000 --> 00:08.000
Identity Box. Zacznijmy od następującego twierdzenia:

00:08.000 --> 00:13.000
Prywatność wymaga tożsamości.

00:13.000 --> 00:19.000
Jednak, nie takiej pierwszej lepszej tożsamości.
Prywatność wymaga suwerennej tożsamości (self-sovereign identity).

00:19.000 --> 00:22.000
Obecni na tej sali najprawdopodobniej wiedzą,
czym jest suwerenna tożsamość.

00:22.000 --> 00:26.000
Krótko mówiąc, jest to tożsamość, którą jest naszą własnością i
którą w pełni kontrolujemy.

00:27.000 --> 00:30.000
Jest naszą i tylko naszą własnością: nie jest więc
własnością serwisów takich jak Google, GitHub, itp.

00:30.000 --> 00:33.000
Jest suwerenna - czyli nikt nie może nam jej zabrać.

00:36.000 --> 00:41.000
W prezentacji tej próbujemy pokazać, że suwerenna
tożsamość nie może istnieć bez sieci rozproszonych.

00:41.000 --> 00:44.000
Może nie jest to oczywiste, lecz łatwiej jest nam to zaobserwować,

00:45.000 --> 00:49.000
kiedy zastanowimy się, jak suwerenna tożsamość może być zrealizowana.

00:50.000 --> 00:55.000
Najprostszym, lecz pewnie również najbardziej naiwnym
sposobem realizacji suwerennej tożsamości,

00:55.000 --> 01:00.000
jest skojarzenie jej z kryptograficznym kluczem publicznym.

01:00.000 --> 01:05.000
Inaczej mówiąc: każda tożsamość to klucz publiczny.

01:05.000 --> 01:08.000
Tak też uczyniliśmy

01:08.000 --> 01:10.000
kiedy stworzyliśmy Cogito - 

01:10.000 --> 01:17.000
- system zarządzania tożsamością - blisko dwa lata temu.

01:17.000 --> 01:20.000
Zaprezentowaliśmy Cogito również tutaj rok temu jako "lighting talk".

01:20.000 --> 01:28.000
Jak można oczekiwać, używając kluczy publicznych do realizacji
suwerennej tożsamości natychmiast przywołuje następujące pytania:

01:28.000 --> 01:32.000
Co jeżeli klucz zostanie złamany?

01:32.000 --> 01:35.000
Oczywiście, nasza suwerenność tożsamość staje się bezużyteczna.

01:35.000 --> 01:38.000
Jak inni użytkownicy dowiedzą się o tym?

01:38.000 --> 01:41.000
Czy my sami znamy wszystkich, którzy polegają na naszej tożsamości?

01:41.000 --> 01:42.000
Oczywiście nie!

01:42.000 --> 01:47.000
Innymi słowy, mamy do czynienia z siecią kluczy publicznych,
znanej jako sieć zaufania.

01:47.000 --> 01:50.000
Coś, co jest same w sobie znanym i trudnym problemem.

01:54.000 --> 01:58.000
Członkowie inicjatywy "Rebooting web of trust",
we współpracy z innymi autorami,

01:58.000 --> 02:03.000
stworzyli propozycję Identyfikatorów Rozproszonych
(Decentralized Identifiers - DIDs).

02:11.000 --> 02:20.000
Zaproponowali oni tak zwany "resolver". Jak on działa?

02:20.000 --> 02:25.000
Posiadając identyfikator, ciąg znaków,

02:25.000 --> 02:31.000
możemy zapytać "resolver": "znajdź mi dokument
opisujący ten rozproszony identyfikator
(Decentralized Identifier Document - DID Doc)".

02:31.000 --> 02:35.000
W dokumencie tym, znajdziemy więcej informacji na
temat danego identyfikatora:

02:35.000 --> 02:38.000
na przykład, publiczne klucze do szyfrowania czy też
podpisywania treści cyfrowych.

02:39.000 --> 02:41.000
Całkiem dobry pomysł, czyż nie?

02:41.000 --> 02:44.000
Na poziomie koncepcyjnym, podejście to wydaje się
bardzo obiecujące,

02:44.000 --> 02:50.000
rozwiązując większość problemów wspomnianych wcześniej.

02:51.000 --> 02:53.000
Mianowicie, możemy w każdej chwili zmienić nasze klucze,

02:53.000 --> 02:56.000
nie będąc zmuszeni do zmiany naszej suwerennej tożsamości.

02:57.000 --> 03:00.000
Inni nie muszą znać i przechowywać naszych aktualnych
kluczy publicznych.

03:00.000 --> 03:04.000
Również my, nie musimy przechowywać kluczy publicznych tych,
z którymi chcielibyśmy się skomunikować.

03:04.000 --> 03:08.000
Wystarczy zapytać "resolver", a "resolver" powie nam:

03:08.000 --> 03:12.000
"pokaż mi swój identyfikator, a ja znajdę dla ciebie klucze".

03:12.000 --> 03:15.000
Problem dystrybucji kluczy rozwiązany!

03:15.000 --> 03:20.000
Innymi słowy, zamiast sieci kluczy, znanej z
typowych sieci zaufania,

03:20.000 --> 03:23.000
przechodzimy do sytuacji przedstawionej na rysunku:

03:23.000 --> 03:28.000
używamy czegoś w rodzaju globalnej infrastruktury,
aby odnaleźć szczegółowe informacje o danym
identyfikatorze (odpowiadającym danej suwerennej tożsamości).

03:28.000 --> 03:33.000
Patrząc jednak na załączony rysunek, przypomina on
nam bardziej architekturę scentralizowaną niż rozproszoną.

03:33.000 --> 03:37.000
I rzeczywiście, wspomniany "resolver" może zostać
zrealizowany w sposób zupełnie centralny.

03:37.000 --> 03:41.000
I w ramach eksperymentu, tak też uczyniliśmy.

03:41.000 --> 03:46.000
Rozwiązanie takie przedstawia dużą niezawodność,
szybkość, jednak...

03:46.000 --> 03:51.000
jeżeli oprzemy system rezolucji identyfikatorów (nasz "resolver")

03:51.000 --> 03:53.000
jedynie na scentralizowanej architekturze,

03:53.000 --> 03:56.000
wówczas trudno wciąż mówić o tożsamości, która wciąż jest suwerenna!

03:56.000 --> 04:03.000
Oznacza to, że nasz "resolver" również musi być
zrealizowany w ramach architektury rozproszonej. 

04:03.000 --> 04:09.000
To właśnie dlatego na początku tej prezentacji
wysunęliśmy tezę, iż tożsamość rozproszona wymaga
sieci rozproszonej.

04:09.000 --> 04:13.000
Jest jednak pewien problem z sieciami rozproszonymi.

04:13.000 --> 04:23.000
Czyż nie jest zastanawiające, iż po tylu latach, nie
doczekaliśmy się ogólnie dostępnej, globalnej sieci rozproszonej.

04:23.000 --> 04:28.000
Jednym z powodów zaistniałej sytuacji jest brak fizycznych węzłów sieci.

04:28.000 --> 04:32.000
Zauważmy, że sieć rozproszona nie będzie skuteczna, jeżeli po
prostu zainstalujemy 1000 wirtualnych węzłów używając serwisów
takich jak Amazon, czy Google.

04:32.000 --> 04:40.000
Nie wystarczy również, aby entuzjaści sieciowi raz na tydzień
uruchomili lokalny węzeł sieciowy na jedynie kilka godzin.

04:40.000 --> 04:46.000
Niestety, sieci rozproszone nie działają w ten sposób.
Nawet popularna obecnie sieć IPFS promuje węzły, które są
stabilne i pozostają aktywne.

04:46.000 --> 04:54.000
Tylko za sprawą fizycznych węzłów, które są dostępne,
stabilne i ciągle aktywne, możemy stworzyć skuteczne
sieci rozproszone.

04:54.000 --> 04:57.000
Mam tutaj ze sobą jeden taki fizyczny węzeł sieci.

04:57.000 --> 05:01.000
Identity Box jest takim fizycznym węzłem - urządzeniem.

05:01.000 --> 05:03.000
Tak naprawdę, to co przyniosłem tutaj ze sobą to
jedynie pusta obudowa.

05:03.000 --> 05:08.000
Prawdziwy Identity Box jest aktywny i w tej chwili
znajduje się na moim biurku.

05:08.000 --> 05:11.000
I razem z innymi Identity Box'ami jest częścią
globalnej sieci rozproszonej.

05:11.000 --> 05:13.000
A więc, jak działa nasz Identity Box?

05:13.000 --> 05:19.000
Otóż, naszym celem jest instalacja Identity Box'ów w
domach użytkowników.

05:19.000 --> 05:24.000
Każdy użytkownik Identity Box'a, otrzyma również
aplikację Identity App.

05:24.000 --> 05:28.000
Zobaczmy to w praktyce.

05:28.000 --> 05:38.000
Widzimy tutaj Identity App na moim telefonie.
Używając tej aplikacji mogę zarządzać moją suwerenną tożsamością.

05:38.000 --> 05:44.000
Aby połączyć moją Identity App z moim Identity Box'em,
skanuję znajdujący się na nim QR Code.

05:44.000 --> 05:50.000
Moja Identity App zostaje skojarzona z moim Identity Box'em -
tym który w tej chwili znajduje się na moim biurku.

05:50.000 --> 05:53.000
Identity App rozpoznaje, że na moim Identity Box'ie znajduje
się aktywna kopia bezpieczeństwa, teraz jednak nie będę jej używał.

05:53.000 --> 05:58.000
Zamiast tego, utworzę zupełnie nowy identyfikator -
moją pierwszą suwerenną tożsamość.

06:02.000 --> 06:08.000
Po utworzeniu pierwszej suwerennej tożsamości,
pojawi się ona w książce adresowej jako jedna z
moich własnych tożsamości.

06:08.000 --> 06:12.000
Identity App pozwala na tworzenie wielu suwerennych tożsamości.

06:12.000 --> 06:22.000
Ponieważ teraz jestem na konferencji FOSDEM,
stworzę tożsamość "Marcin@FOSDEM20".

06:26.000 --> 06:29.000
W mojej książce adresowej widzimy teraz dwie, moje własne,
suwerenne tożsamości.

06:29.000 --> 06:35.000
Mogę w łatwy sposób zmieniać aktywną suwerenną tożsamość:
w danym momencie mogę być "Marcinem", w innej mogę
używać tożsamości "Marcin@FOSDEM20".

06:35.000 --> 06:39.000
Chciałbym jednak teraz również użyć mojej suwerennej
tożsamości w interakcji z innymi użytkownikami.

06:39.000 --> 06:43.000
Mój kolega, Marek, jest tutaj ze mną. Połączmy się więc.

06:43.000 --> 06:46.000
Marek używa swojej własnej Identity App, skojarzonej z
jego własnym Identity Box'em.

06:46.000 --> 06:49.000
Używając swojej Identity App, Marek pokazuje mi QR Code
odpowiadający jednej z jego własnych suwerennych tożsamości.

06:49.000 --> 06:57.000
Skanuję ten kod używając mojej Identity App.

06:57.000 --> 07:00.000
I dodaję tożsamość Marka do mojej książki adresowej,

07:03.000 --> 07:07.000
gdzie pojawi się w grupie tożsamości innych użytkowników
("peer identities").

07:10.000 --> 07:14.000
Użyjmy teraz stworzonego przez nas systemu wymiany
zaszyfrowanych wiadomości, aby pokazać praktyczną aplikację
suwerennych, rozproszonych identyfikatorów.

07:14.000 --> 07:21.000
System prosi mnie o zeskanowanie zaprezentowanego kodu w
celu połączenia się z moją Identity App.

07:22.000 --> 07:26.000
W wybieram tożsamość odbiorcy mojej zaszyfrowanej wiadomości
w mojej Identity App.

07:26.000 --> 07:28.000
Wybieram tożsamość Marka

07:28.000 --> 07:35.000
oraz wpisuję mój sekret w przeglądarce.

07:35.000 --> 07:41.000
System wymiany wiadomości dokonuje rezolucji ("resolver")
identyfikatora Marka i w ten sposób otrzymuje jego aktualny
klucz publicznych niezbędny do zaszyfrowania wiadomości.

07:41.000 --> 07:43.000
Zaszyfrowany sekret zapisywany jest w sieci IPFS, ja natomiast
otrzymuję link to zaszyfrowanej wiadomości.

07:43.000 --> 07:50.000
Otrzymany link jest bezpieczny. Jedynie Marek może go odszyfrować,
używając swojej Identity App. Oznacza to, że link ten możemy
wysłać w dowolny sposób - nie musimy go żaden sposób
zabezpieczać czy chronić.

07:50.000 --> 07:52.000
Otrzymawszy link - Marek otwiera go w swojej przeglądarce

07:52.000 --> 07:58.000
i używa swojej Identity App aby odszyfrować wiadomość.

07:58.000 --> 08:02.000
Podobnie jak to było w moim przypadku, zeskanuje on QR Code
aby utworzyć połączenie pomiędzy przeglądarką a jego Identity App.

08:02.000 --> 08:05.000
Sekret zostanie odszyfrowany używają klucza prywatnego
należącego do Marka i znajdującego się w jego aplikacji Identity App.

08:05.000 --> 08:09.000
Tak działa Identity Box! Dziękuję za uwagę!